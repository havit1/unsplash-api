{"version":3,"sources":["Components/HOC/withInfScroll.jsx","utils/request.js","utils/unsplash.js","Components/Context/theme-context.js","Components/PhotoPage/PhotoPage.jsx","Components/Grid/Grid.jsx","Components/SerachForm/SearchForm.jsx","utils/uniqueValuesOnly.js","Components/Home/Home.jsx","Components/Common/ThemeButton.js","Components/Navbar/Navbar.jsx","Components/Search/Search.jsx","Components/AboutPage/AboutPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["withInfScroll","WrappedComponent","getData","props","populate","document","documentElement","getBoundingClientRect","bottom","clientHeight","setState","fething","nextImages","state","hasMore","newState","Object","assign","currentPage","match","params","queryString","bind","images","prevProps","prevState","this","setImages","window","addEventListener","removeEventListener","React","Component","axios","interceptors","response","use","error","status","console","log","toast","Promise","reject","Request","url","headers","get","unsplash","page","Authorization","process","qString","toLowerCase","photoId","themes","dark","toggleTheme","ThemeContext","createContext","withRouter","location","history","useState","photo","isFetching","photoData","setPhotoData","background","title","data","alt_description","fetchData","a","id","useEffect","body","getElementsByTagName","classList","add","remove","className","user","name","instagram_username","onClick","goBack","src","urls","regular","description","related_collections","results","length","map","collection","key","to","preview_photos","slice","small","GridItem","lazy","Consumer","darkTheme","image","Suspense","fallback","SearchForm","onChange","e","searchValue","currentTarget","value","isFocus","submitForm","preventDefault","push","onSubmit","type","placeholder","SearchFormWithRouter","uniqByProp_map","prop","arr","Array","from","reduce","acc","item","set","Map","values","that","photos","concat","unifiedImages","info","homeWithScroll","ThemeButton","getClass","context","htmlFor","checked","contextType","Navbar","onSearch","exact","searchWithScroll","uniqueImages","AboutPage","App","Provider","path","component","Home","Search","PhotoPage","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19173108.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function withInfScroll(WrappedComponent, getData) {\r\n  return class extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.getData = getData;\r\n      this.populate = this.populate.bind(this);\r\n      this.state = {\r\n        images: [],\r\n        currentPage: 1,\r\n        hasMore: true\r\n      };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (\r\n        prevProps.match.params.queryString !==\r\n        this.props.match.params.queryString\r\n      ) {\r\n        this.setImages([]);\r\n        this.getData(\r\n          this.state.currentPage,\r\n          this,\r\n          this.props.match.params.queryString\r\n        );\r\n      }\r\n    }\r\n\r\n    setImages(images) {\r\n      this.setState({ images });\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getData(\r\n        this.state.currentPage,\r\n        this,\r\n        this.props.match.params.queryString\r\n      );\r\n      window.addEventListener(\"scroll\", this.populate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"scroll\", this.populate);\r\n    }\r\n\r\n    populate = () => {\r\n      let windowRelativeBottom = document.documentElement.getBoundingClientRect()\r\n        .bottom;\r\n      if (windowRelativeBottom < document.documentElement.clientHeight + 1) {\r\n        this.setState({ fething: true });\r\n        this.nextImages();\r\n      }\r\n    };\r\n\r\n    nextImages = () => {\r\n      if (!this.state.hasMore) return;\r\n\r\n      this.setState(\r\n        state => {\r\n          const newState = Object.assign(state);\r\n          newState.currentPage++;\r\n          return newState;\r\n        },\r\n        () => {\r\n          this.getData(\r\n            this.state.currentPage,\r\n            this,\r\n            this.props.match.params.queryString\r\n          );\r\n        }\r\n      );\r\n    };\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} images={this.state.images} />;\r\n    }\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(\"Logging the error\", error);\r\n    toast.error(\"Something went wrong\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nclass Request {\r\n  get(url, headers = {}) {\r\n    return axios.get(url, { headers });\r\n  }\r\n}\r\nexport default Request;\r\n","import Request from \"./request\";\r\n\r\nexport const unsplash = {\r\n  getMainPagePhotos: page => {\r\n    const request = new Request();\r\n    return request.get(`https://api.unsplash.com/photos?page=${page}`, {\r\n      Authorization: `Client-ID ${process.env.REACT_APP_UNSPLASH_API_KEY}`\r\n    });\r\n  },\r\n  getPhotosByQuery: (qString, page) => {\r\n    const request = new Request();\r\n\r\n    return request.get(\r\n      `https://api.unsplash.com/search/photos?page=${page}&query=${qString.toLowerCase()}`,\r\n      {\r\n        Authorization: `Client-ID ${process.env.REACT_APP_UNSPLASH_API_KEY}`\r\n      }\r\n    );\r\n  },\r\n  getPhotoById: photoId => {\r\n    const request = new Request();\r\n    return request.get(`https://api.unsplash.com/photos/${photoId}`, {\r\n      Authorization: `Client-ID ${process.env.REACT_APP_UNSPLASH_API_KEY}`\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport const themes = {\r\n  dark: false,\r\n  toggleTheme: () => {}\r\n};\r\n\r\nexport const ThemeContext = React.createContext(themes);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { unsplash } from \"../../utils/unsplash\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./PhotoPage.scss\";\r\n\r\nconst PhotoPage = ({ location, history, match }) => {\r\n  const [photoData, setPhotoData] = useState({\r\n    photo: null,\r\n    isFetching: true\r\n  });\r\n  const { state = {} } = location;\r\n  const { background } = state;\r\n  const { photo } = photoData;\r\n  document.title = photo ? `${photo.data.alt_description}` : \"Photo\"\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setPhotoData({ photo: null, isFetching: true });\r\n\r\n      const photo = await unsplash.getPhotoById(match.params.id);\r\n      setPhotoData({ photo: photo, isFetching: false });\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\" + `${error.id}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!background) return;\r\n    const body = document.getElementsByTagName(\"body\");\r\n    body[0].classList.add(\"modal-opened\");\r\n\r\n    return () => body[0].classList.remove(\"modal-opened\");\r\n  });\r\n\r\n  return (\r\n    !photoData.isFetching ?\r\n      <div\r\n        className={background ? \"photo-page modal\" : \"photo-page\"}\r\n      // onClick={() => history.goBack()}\r\n      >\r\n        <div className=\"photo-page__main\">\r\n          <div className=\"photo-page__header\">\r\n            <div className=\"photo-page__header-credentials\">\r\n              <p className=\"photo-page__header-name\">{photo.data.user.name}</p>\r\n              {photo.data.user.instagram_username && <p className=\"photo-page__header-instagram\">@{photo.data.user.instagram_username}</p>}\r\n            </div>\r\n            {background && <i className=\"fas fa-times photo-page__header-back-button\" onClick={() => history.goBack()}></i>}\r\n          </div>\r\n          <div className=\"photo-page__main-image\">\r\n            <img src={`${photoData.photo.data.urls.regular}`} />\r\n          </div>\r\n          <div className=\"photo-page__main-other\">\r\n            <p className=\"photo-page__main-other-description\">{photoData.photo.data.description}</p>\r\n\r\n            {photo.data.related_collections.results.length > 0 && <div className=\"photo-page__main-other-collections\">\r\n              <p>Featured in: </p>\r\n              <ul className=\"photo-page__main-other-collections-list\">\r\n                {photo.data.related_collections.results.map(collection =>\r\n                  <li key={collection.id} className=\"photo-page__main-other-collections-list-element\">\r\n                    <Link to=\"\">\r\n                      <div className=\"photo-page__main-other-collections-list-element-images\">\r\n                        {collection.preview_photos.slice(1).map(photo => <img key={photo.id} src={`${photo.urls.small}`}></img>)}\r\n                      </div>\r\n                    </Link>\r\n                  </li>)}\r\n              </ul>\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div> : <div className={background ? \"photo-page modal\" : \"photo-page\"}></div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PhotoPage);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../Context/theme-context\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PhotoPage from \"../PhotoPage/PhotoPage\";\r\nimport \"./Grid.scss\";\r\n\r\nconst GridItem = React.lazy(() => import(\"./GridItem\"));\r\n\r\nconst Grid = ({ images = [] }) => {\r\n  return (\r\n    <>\r\n      <ThemeContext.Consumer>\r\n        {({ darkTheme }) => (\r\n          <div className={darkTheme ? \"grid dark\" : \"grid\"}>\r\n            {images.map(image => (\r\n              <React.Suspense key={image.id} fallback={<div>LOADING</div>}>\r\n                <GridItem key={image.id} image={image} />\r\n              </React.Suspense>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Grid);\r\n","import React, { Component } from \"react\";\r\nimport \"./SearchForm.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFocus: false,\r\n      searchValue: \"\"\r\n    };\r\n\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    if (!this.state.searchValue) {\r\n      return;\r\n    }\r\n    this.props.history.push(`/search/${this.state.searchValue}`);\r\n  }\r\n\r\n  onChange = e => {\r\n    const searchValue = e.currentTarget.value;\r\n    this.setState({ searchValue });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={\"search-form\"} onSubmit={this.submitForm}>\r\n        <button className=\"search-form__button\">S</button>\r\n        <input\r\n          onChange={this.onChange}\r\n          value={this.state.searchValue}\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          className=\"search-form__input\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SearchFormWithRouter = withRouter(SearchForm);\r\nexport { SearchFormWithRouter as SearchForm };\r\n","export const uniqByProp_map = prop => arr =>\r\n  Array.from(\r\n    arr\r\n      .reduce(\r\n        (acc, item) => (item && item[prop] && acc.set(item[prop], item), acc),\r\n        new Map()\r\n      )\r\n      .values()\r\n  );\r\n","import React, { Component } from \"react\";\r\nimport { withInfScroll } from \"../HOC/withInfScroll\";\r\nimport { unsplash } from \"../../utils/unsplash\";\r\nimport { toast } from \"react-toastify\";\r\nimport Grid from \"../Grid/Grid\";\r\nimport { SearchForm } from \"../SerachForm\";\r\nimport { uniqByProp_map } from \"../../utils/uniqueValuesOnly\";\r\nimport \"./Home.scss\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    document.title = \"Home\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section>\r\n          <div className=\"home__page-header\">\r\n            <h1>Not Unsplash</h1>\r\n            <div className=\"home__page-header-input-wrapper\">\r\n              <SearchForm />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <Grid images={this.props.images} />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nasync function fetchImages(currentPage, that) {\r\n  try {\r\n    const photos = await unsplash.getMainPagePhotos(currentPage);\r\n    if (!photos.data.length) return that.setState({ hasMore: false });\r\n    const images = that.state.images.concat(photos.data);\r\n    const unifiedImages = uniqByProp_map(\"id\")(images);\r\n    that.setImages(unifiedImages);\r\n  } catch (error) {\r\n    toast.info(\"No more photos on main page:)\");\r\n  }\r\n}\r\n\r\nconst homeWithScroll = withInfScroll(Home, fetchImages);\r\n\r\nexport default homeWithScroll;\r\n","import React from \"react\";\r\nimport { ThemeContext } from \"../Context/theme-context\";\r\nimport \"./ThemeButton.scss\";\r\n\r\nclass ThemeButton extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  getClass = () => {\r\n    return this.context.darkTheme\r\n      ? \"theme-toggle-button dark\"\r\n      : \"theme-toggle-button\";\r\n  };\r\n\r\n  render() {\r\n    let props = this.props;\r\n    let darkTheme = this.context.darkTheme;\r\n    let toggleTheme = this.context.toggleTheme;\r\n\r\n    return (\r\n      <div className=\"theme-switch-wrapper\">\r\n        <label className=\"theme-switch\" htmlFor=\"checkbox\">\r\n          <input\r\n            {...props}\r\n            className={`${this.getClass()}`}\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            checked={darkTheme}\r\n            onChange={toggleTheme}\r\n          ></input>\r\n          <div className=\"slider round\"></div>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeButton;\r\n","import React, { Component } from \"react\";\r\nimport { SearchForm } from \"../SerachForm\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ThemeButton from \"../Common/ThemeButton\";\r\nimport { ThemeContext } from \"../Context/theme-context\";\r\nimport \"./Navbar.scss\";\r\n\r\nexport class Navbar extends Component {\r\n  state = {};\r\n\r\n  static contextType = ThemeContext;\r\n\r\n  getClass = () => {\r\n    return this.context.darkTheme ? \"nav dark\" : \"nav\";\r\n  };\r\n\r\n  render() {\r\n    const { onSearch } = this.props;\r\n\r\n    return (\r\n      <nav className={`${this.getClass()}`}>\r\n        <div className=\"nav__content\">\r\n          <div className=\"nav__search-form\">\r\n            <SearchForm onSearch={onSearch} />\r\n          </div>\r\n          <ul className=\"nav__links\">\r\n            <li className=\"nav__links-link\">\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav__links-link\">\r\n              <NavLink to=\"/about\">About</NavLink>\r\n            </li>\r\n          </ul>\r\n          <ThemeButton />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { unsplash } from \"../../utils/unsplash\";\r\nimport { withInfScroll } from \"../HOC/withInfScroll\";\r\nimport { uniqByProp_map } from \"../../utils/uniqueValuesOnly\";\r\n\r\nimport Grid from \"../Grid/Grid\";\r\n\r\nclass Search extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title = `${this.props.match.params.queryString}`\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Grid images={this.props.images} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst fetchImages = async (currentPage, that, queryString) => {\r\n  try {\r\n    const photos = await unsplash.getPhotosByQuery(queryString, currentPage);\r\n    if (!photos.data.results.length) return that.setState({ hasMore: false });\r\n    const images = that.state.images.concat(photos.data.results);\r\n    const uniqueImages = uniqByProp_map(\"id\")(images);\r\n    that.setImages(uniqueImages);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst searchWithScroll = withInfScroll(Search, fetchImages);\r\n\r\nexport default searchWithScroll;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst AboutPage = () => {\r\n\r\n  useEffect(() => {\r\n    document.title = \"About\"\r\n  }\r\n  )\r\n\r\n  return <div>About</div>;\r\n};\r\n\r\nexport default AboutPage;\r\n","import React, { Component } from \"react\";\nimport Home from \"./Components/Home/Home\";\nimport { Navbar } from \"./Components/Navbar\";\nimport Search from \"./Components/Search/Search\";\nimport AboutPage from \"./Components/AboutPage/AboutPage\";\nimport PhotoPage from \"./Components/PhotoPage/PhotoPage\";\nimport { ThemeContext, themes } from \"./Components/Context/theme-context\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        darkTheme: state.darkTheme ? false : true\n      }));\n    };\n\n    this.state = {\n      darkTheme: themes.dark,\n      toggleTheme: this.toggleTheme\n    };\n  }\n\n  render() {\n    let background =\n      this.props.location.state && this.props.location.state.background;\n\n    return (\n      <ThemeContext.Provider value={this.state}>\n        <div className={this.state.darkTheme ? \"app dark\" : \"app\"}>\n          <ToastContainer />\n          <Navbar />\n          <Switch location={background || this.props.location}>\n            <Route exact={true} path=\"/\" component={Home} />\n            <Route path=\"/search/:queryString\" component={Search} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/photo/:id\" component={PhotoPage} />>\n            <Route path=\"/404\" component={() => <h1>Not found</h1>} />\n            <Redirect to=\"/404\" />\n          </Switch>\n          {this.props.location.state ? (\n            <Route path=\"/photo/:id\" component={PhotoPage} />\n          ) : null}\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}